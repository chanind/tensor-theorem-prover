name: CI
on:
  push:
    tags:
      - "*"
    branches:
      - "*"
jobs:
  lint_test_and_build:
    if: "startsWith(github.event.ref, 'refs/tags/v') || !contains(github.event.head_commit.message, '#release')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: build pyo3
        run: poetry run maturin develop
      - name: flake8 linting
        run: poetry run flake8 .
      - name: black code formatting
        run: poetry run black . --check
      - name: mypy type checking
        run: poetry run mypy .
      - name: pytest
        run: poetry run pytest --cov=./ --cov-report=xml
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./coverage.xml
          fail_ci_if_error: true
      - uses: dtolnay/rust-toolchain@stable
      - name: rust tests
        run: |
          pip3 install numpy
          cargo test
      - name: build
        run: poetry build
      - name: build docs
        run: poetry run sphinx-build -b html docs docs/build

  macos:
    if: "startsWith(github.event.ref, 'refs/tags/v') || !contains(github.event.head_commit.message, '#release')"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release -i python3.8 --out dist --sdist
      - name: Install built wheel - x86_64
        run: |
          pip install tensor_theorem_prover --pre --no-index --find-links dist --force-reinstall
          cd .. && python -c "import tensor_theorem_prover._rust"
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          args: --release -i python3.8 --universal2 --out dist
      - name: Install built wheel - universal2
        run: |
          pip install tensor_theorem_prover --pre --no-index --find-links dist --force-reinstall
          cd .. && python -c "import tensor_theorem_prover._rust"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    if: "startsWith(github.event.ref, 'refs/tags/v') || !contains(github.event.head_commit.message, '#release')"
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release -i python3.8 --out dist
      - name: Install built wheel
        run: |
          pip install tensor_theorem_prover --pre --no-index --find-links dist --force-reinstall
          cd .. && python -c "import tensor_theorem_prover._rust"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    if: "startsWith(github.event.ref, 'refs/tags/v') || !contains(github.event.head_commit.message, '#release')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release -i python3.8 --out dist
      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install tensor_theorem_prover --pre --no-index --find-links dist --force-reinstall
          cd .. && python -c "import tensor_theorem_prover._rust"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  musllinux:
    if: "startsWith(github.event.ref, 'refs/tags/v') || !contains(github.event.head_commit.message, '#release')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: --release -i python3.8 --out dist
      - name: Install built wheel
        if: matrix.target == 'x86_64-unknown-linux-musl'
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:latest
          options: -v ${{ github.workspace }}:/io -w /io
          run: |
            apk add py3-pip
            pip3 install -U pip
            pip3 install twine
            twine check --strict dist/*
            # TODO: figure out why this doesn't work
            # pip3 install tensor_theorem_prover --pre --no-index --find-links /io/dist/ --force-reinstall
            # cd .. && python3 -c "import tensor_theorem_prover"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  musllinux-cross:
    if: "startsWith(github.event.ref, 'refs/tags/v') || !contains(github.event.head_commit.message, '#release')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_2
          args: --release -i python3.8 --out dist
      # TODO: figure out why this doesn't work on this arch
      # - uses: uraimo/run-on-arch-action@v2.5.0
      #   name: Install built wheel
      #   with:
      #     arch: ${{ matrix.platform.arch }}
      #     distro: alpine_latest
      #     githubToken: ${{ github.token }}
      #     install: |
      #       apk add py3-pip
      #       pip3 install -U pip
      #     run: |
      #       pip3 install twine
      #       twine check --strict dist/*
      #       pip3 install tensor_theorem_prover --pre --no-index --find-links dist/ --force-reinstall
      #       cd .. && python3 -c "import tensor_theorem_prover"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  tag_release:
    needs:
      - lint_test_and_build
      - windows
      - macos
      - linux
      - musllinux
      - musllinux-cross
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
      - name: Semantic Release
        # uses: relekang/python-semantic-release@v7.28.1
        # temp fix until https://github.com/relekang/python-semantic-release/pull/472 is fixed
        uses: chanind/python-semantic-release@7-28-1-packaging-fix
        with:
          github_token: ${{ secrets.GH_PAT }}

  deploy_release:
    needs:
      - lint_test_and_build
      - windows
      - macos
      - linux
      - musllinux
      - musllinux-cross
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - name: push to pypi
        run: |
          pip install poetry
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish
